Main Task:
X	-	Write an array-based implementation of a queue that uses a resizable, circular array to represent the items in the
		queue.

Detail:
X		-	Your class should have 
X			-	a DEFAULT_CAPACITY constant with default value 1
X			-	a capacity data member
X	-	Your class should double the size of the array when an attempt is made to enqueue an item when the capacity is full
X	-	Your class should halve the size of the array when an item is dequeued if it causes the number of items to be half the capacity or less
X	-	enqueue() will be void because it is no longer possible to exceed the queue's capacity. 
X	-	dequeue() will be void because you should throw a PrecondViolatedExcep exception if the queue is empty, instead of returning false.
X	-	Be sure to test your code exhaustively